name: CI

on:
  push: { branches: [main] }
  pull_request: { branches: [main] }

permissions:
  contents: read

jobs:
  get-users:
    name: Get users
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get users from `./user`
        id: set-matrix
        run: |
          echo "::set-output name=matrix::$(ls -A1 user | \
            jq --raw-input --slurp --compact-output 'split("\n")[:-1]')"

  eval:
    name: Evaluate
    runs-on: ubuntu-latest
    needs: get-users
    strategy:
      matrix:
        user: ${{ fromJson(needs.get-users.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Nix
        uses: cachix/install-nix-action@v15

      - name: Evaluate aarch64 macOS system for ${{ matrix.user }}
        run: nix eval --show-trace --json .#darwinConfigurations.${{ matrix.user }}-aarch64.config.system.build.toplevel.drvPath | json_pp

      - name: Evaluate x86_64 macOS system for ${{ matrix.user }}
        run: nix eval --show-trace --json .#darwinConfigurations.${{ matrix.user }}-x86_64.config.system.build.toplevel.drvPath | json_pp

  build-installer:
    name: Build installer
    runs-on: macos-latest
    defaults: { run: { working-directory: installer } }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build
        run: cargo build --locked --release --target aarch64-apple-darwin

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: installer
          path: target/aarch64-apple-darwin/release/installer
